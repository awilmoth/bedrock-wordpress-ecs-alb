Description: >

  This template deploys a VPC, with a pair of public and private subnets spread
  across two Availabilty Zones. It deploys an Internet Gateway, with a default
  route on the public subnets.

  It then deploys a highly available ECS cluster using an AutoScaling Group, with
  ECS hosts distributed across multiple Availability Zones.

Parameters:
  StackName:
    Type: String
    Description: The name of the stack
    Default: powertext

  AppUrl:
    Type: "String"
    Description: "The URL for our app (e.g. mydomain.com)"
    AllowedPattern: "[a-z0-9._-]+"
    Default: powertextapp.com

  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: "The hosted zone ID to add the Route 53 recordset to."
    Default: Z09391002QYGZNIVVJEVF

  SSHKeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: The name of the key-pair used for SSH access to ECS hosts
    Default: powertext.pem

Resources:

#  AmazonCertificate:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: !Sub https://postulent-cfn.s3.amazonaws.com/infrastructure/certs.yaml
#      Parameters:
#        AppUrl: !Ref AppUrl
#        StackName: !Ref StackName

  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://postulent-cfn.s3.amazonaws.com/infrastructure/vpc.yaml
      Parameters:
        AppUrl: !Ref AppUrl
        StackName: !Ref StackName

  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://postulent-cfn.s3.amazonaws.com/infrastructure/load-balancers.yaml
      Parameters:
        StackName: !Ref StackName
        AppUrl: !Ref AppUrl
        HostedZoneId: !Ref HostedZoneId
        Subnets: !GetAtt VPC.Outputs.PublicSubnets
        WildcardSSLCertificateArn: arn:aws:acm:us-east-1:802759398275:certificate/030c4491-725b-4457-a18f-b6d9acab5201
    DependsOn:
    - VPC

  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://postulent-cfn.s3.amazonaws.com/infrastructure/ecs-cluster.yaml
      Parameters:
        StackName: !Ref StackName
        InstanceType: t3.small
        PublicSubnetOne: !GetAtt VPC.Outputs.PublicSubnetOne
        PublicSubnetTwo: !GetAtt VPC.Outputs.PublicSubnetTwo
        MaxSize: "4"
        DesiredCapacity: "2"
        ECSAMI: /aws/service/ecs/optimized-ami/amazon-linux/recommended/image_id
        SSHKeyName: !Ref SSHKeyName
        LoadBalancerSecurityGroup: !GetAtt ALB.Outputs.LoadBalancerSecurityGroup
    DependsOn: ALB

  ServiceRole:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://postulent-cfn.s3.amazonaws.com/infrastructure/service-role.yaml

  TaskRole:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://postulent-cfn.s3.amazonaws.com/infrastructure/task-role.yaml

  DjangoS3Storage:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://postulent-cfn.s3.amazonaws.com/infrastructure/django-assets.yaml
      Parameters:
        StackName: !Ref StackName
        AppUrl: !Ref AppUrl

  RDSPostgresDB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://postulent-cfn.s3.amazonaws.com/infrastructure/rds-postgres.yaml
      Parameters:
        StackName: !Ref StackName
        PrivateSubnets: !GetAtt VPC.Outputs.PrivateSubnets
        SourceSecurityGroupId: !GetAtt ECS.Outputs.ContainerInstanceSecurityGroup
    DependsOn: ECS

  SetupPostgresDB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://postulent-cfn.s3.amazonaws.com/infrastructure/postgres-database-setup.yaml
      Parameters:
        DbHost: !GetAtt RDSPostgresDB.Outputs.RDSHost
        DbName: postgres
        DbUsername: "postgres"
        DbPassword: "postgres"
        PublicSubnet1: !GetAtt VPC.Outputs.PublicSubnetOne
        PublicSubnet2: !GetAtt VPC.Outputs.PublicSubnetTwo
        VpcId: !GetAtt VPC.Outputs.VPC
    DependsOn:
    - RDSPostgresDB

  ElastiCacheRedis:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://postulent-cfn.s3.amazonaws.com/infrastructure/elasticache-redis.yaml
      Parameters:
        StackName: !Ref StackName
        PrivateSubnets: !GetAtt VPC.Outputs.PrivateSubnets
        SourceSecurityGroupId: !GetAtt ECS.Outputs.ContainerInstanceSecurityGroup
    DependsOn: ECS


  Django:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://postulent-cfn.s3.amazonaws.com/infrastructure/django.yaml
      Parameters:
        ImageUrl: 802759398275.dkr.ecr.us-east-1.amazonaws.com/powertext_pegasus:latest
        StackName: !Ref Stackname
        AppUrl: "https://app.powertextapp.com"
        DesiredCount: "2"
        Listener: !GetAtt ALB.Outputs.Listener
        ServiceRole: !GetAtt ServiceRole.Outputs.ServiceRole
        TaskRole: !GetAtt TaskRole.Outputs.TaskRole
        DjangoSecretKey: "secretKey"
    DependsOn:
    - ECS
    - SetupPostgresDB
    - ElastiCacheRedis


#  RDSMySQLDB:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: !Sub https://postulent-cfn.s3.amazonaws.com/infrastructure/rds-mysql.yaml
#      Parameters:
#        StackName: !Ref StackName
#        PrivateSubnets: !GetAtt VPC.Outputs.PrivateSubnets
#        SourceSecurityGroupId: !GetAtt ECS.Outputs.ContainerInstanceSecurityGroup
#    DependsOn: ECS

#  WordpressECS:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: !Sub https://postulent-cfn.s3.amazonaws.com/infrastructure/wordpress.yaml
#      Parameters:
#        ecsServiceRole: !GetAtt ServiceRole.Outputs.ServiceRole
#        HostedZone: !Ref HostedZoneId
#        Hostname: !Ref AppUrl
#        ECSCluster: !GetAtt ECS.Outputs.ECSCluster
#        SSLCertificateArn: arn:aws:acm:us-east-1:802759398275:certificate/030c4491-725b-4457-a18f-b6d9acab5201
#        ELBSubnet1: !GetAtt VPC.Outputs.PublicSubnetOne
#        ELBSubnet2: !GetAtt VPC.Outputs.PublicSubnetTwo
#        TargetGroupVPC: !GetAtt VPC.Outputs.VPC#
#        AppName: !Ref StackName
#        DesiredCount: 2
#        DockerImage: 802759398275.dkr.ecr.us-east-1.amazonaws.com/bedrock-wordpress:latest
#        DbHost: !GetAtt RDSMySQLDB.Outputs.RDSMySQLHost
#        DbName: wordpress
#        DbUsername: aaron
#        DbPassword: aaronrules
#        Memory: 1000
#        MemoryReservation: 300
#    DependsOn:
#    - RDSMySQLDB
#    - ECS
#    - WordpressDB

#  SetupWordpressDB:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: !Sub https://postulent-cfn.s3.amazonaws.com/infrastructure/mysql-database-setup.yaml
#      Parameters:
#        DbHost: !GetAtt RDSMySQLDB.Outputs.RDSMySQLHost
#        DbName: wordpress
#        DbUsername: aaron
#        DbPassword: aaronrules
#        PublicSubnet1: !GetAtt VPC.Outputs.PublicSubnetOne
#        PublicSubnet2: !GetAtt VPC.Outputs.PublicSubnetTwo
#        VpcId: !GetAtt VPC.Outputs.VPC
#    DependsOn:
#    - RDSMySQLDB

Outputs:

  AppUrl:
    Description: "The URL for our app (e.g. mydomain.com)"
    Value: !Ref AppUrl
    Export:
      Name: !Sub ${AWS::StackName}:AppUrl

  HostedZoneId:
    Description: "The hosted zone ID to add the Route 53 recordset to."
    Value: !Ref HostedZoneId
    Export:
      Name: !Sub ${AWS::StackName}:HostedZoneId

  SSHKeyName:
    Description: The name of the key-pair used for SSH access to ECS hosts
    Value: !Ref SSHKeyName
    Export:
      Name: !Sub ${AWS::StackName}:SSHKeyName
